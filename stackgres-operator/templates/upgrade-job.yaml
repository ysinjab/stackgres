apiVersion: batch/v1
kind: Job
metadata:
  name: "{{ .Release.Name }}-upgrade"
  namespace: {{ .Release.Namespace }}
  labels:
    app: stackgres-operator
    scope: init
    job: upgrade
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
    "helm.sh/hook-weigth": "-100"
spec:
  template:
    metadata:
      labels:
        app: stackgres-operator
        scope: init
        job: upgrade
    spec:
      serviceAccountName: {{ .Release.Name }}-init
      containers:
      - name: "{{ .Release.Name }}-upgrade"
        image: "ongres/kubectl:v1.19.14-build-6.6"
        imagePullPolicy: "IfNotPresent"
        command:
          - "/bin/bash"
          - "-ecx"
          - |
            {{- if .Release.IsUpgrade }}
            cat << 'EOF' > /tmp/prometheus-postgres-exporter-init.sql
{{ $.Files.Get "prometheus-postgres-exporter-init.sql" | indent 12 }}
            EOF
            kubectl get sgcluster -A --template '{{ "{{ range .items }}{{ printf \"%s:%s\\n\" .metadata.namespace .metadata.name }}{{ end }}" }}' \
              | while read CLUSTER
                do
                  OPERATOR_VERSION="$(kubectl get sgcluster -n "${CLUSTER%:*}" "${CLUSTER#*:}" \
                    --template '{{ "{{" }} index .metadata.annotations "stackgres.io/operatorVersion" {{ "}}" }}')"
                  if echo "$OPERATOR_VERSION" | grep -q '^0\.9\(\.[0123]\)\?\(-.*\)\?$'
                  then
                    kubectl annotate service -n "${CLUSTER%:*}" "${CLUSTER#*:}-primary" \
                      --overwrite stackgres.io/reconciliation-pause-until-restart=true
                    PRIMARY_POD="$(kubectl get pod -n "${CLUSTER%:*}" \
                      -l "app=StackGresCluster,cluster-name=${CLUSTER#*:},cluster=true,role=master" \
                      -o name | head -n 1)"
                    POSTGRES_PASSWORD="$(kubectl get secret -n "${CLUSTER%:*}" "${CLUSTER#*:}" \
                      --template '{{ "{{ printf \"%s\" (index .data \"superuser-password\" | base64decode) }}" }}')"
                    cat /tmp/prometheus-postgres-exporter-init.sql | \
                      kubectl exec -i -n "${CLUSTER%:*}" "$PRIMARY_POD" -c patroni -- \
                        sh -c "PGPASSWORD='$POSTGRES_PASSWORD' psql -h '${CLUSTER#*:}-primary'"
                  fi
                done
            {{- end }}
      restartPolicy: OnFailure
